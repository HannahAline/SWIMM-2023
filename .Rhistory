### Deleting unnecessary columns and rows
dat$StartDate <- NULL
dat$EndDate <- NULL
dat$Status <- NULL
dat$IPAddress <- NULL
dat$Duration..in.seconds. <- NULL
dat$Finished <- NULL
dat$RecordedDate <- NULL
dat$ResponseId <- NULL
dat$RecipientLastName <- NULL
dat$RecipientFirstName <- NULL
dat$RecipientEmail <- NULL
dat$ExternalReference <- NULL
dat$LocationLatitude <- NULL
dat$LocationLongitude <- NULL
dat$DistributionChannel <- NULL
dat$UserLanguage <- NULL
dat$Q_RecaptchaScore <- NULL
# Remove rows 1 and 2
dat <- dat[-c(1, 2), ]
View(dat)
## creating country-specific datasets for USA and MX based on Q44 asking where they reside
table(dat$Q44)
usa <- dat[dat$Q44 == "United States",]
nrow(usa) ## USA sample size
mex <- dat[dat$Q44 == "Mexico",]
################################################################################
# Load necessary library for plotting
library(ggplot2)
# Generate a blue scale color palette
blue_scale_colors <- colorRampPalette(c("lightblue", "darkblue"))(5)
#-------------------------------------------------------------------------------
#Q32 - What year were you born?
dat$Q32 = as.numeric(dat$Q32)
summary(dat$Q32) #Some people entered years wrong, need to fix
# Filter data to include birth years within the range of 1900 and 2023
dat <- dat[dat$Q32 >= 1900 & dat$Q32 <= 2023, ] #Fixed
#Histogram for birth years
ggplot(data = dat, aes(x = Q32)) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
labs(title = "Distribution of Birth Years",
x = "Birth Year",
y = "Count") +
theme_minimal()
# Check levels
levels(dat$Q66)
# Bar plot for the distribution of respondents across countries
ggplot(data = dat[!is.na(dat$Q66), ], aes(x = Q66, fill = Q66)) +
geom_bar() +
labs(title = "Distribution of Respondents by Country",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = blue_scale_colors)
#-------------------------------------------------------------------------------
#Q66 - What country are you currently in, and/or where do you do most of your fishing?
dat$Q66 = as.factor(dat$Q66)
# Check levels
levels(dat$Q66)
# Bar plot for the distribution of respondents across countries
ggplot(data = dat[!is.na(dat$Q66), ], aes(x = Q66, fill = Q66)) +
geom_bar() +
labs(title = "Distribution of Respondents by Country",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = blue_scale_colors)
#Removing unecessary levels
dat$Q66 <- droplevels(dat$Q66, exclude = "")
# Bar plot for the distribution of respondents across countries
ggplot(data = dat[!is.na(dat$Q66), ], aes(x = Q66, fill = Q66)) +
geom_bar() +
labs(title = "Distribution of Respondents by Country",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = blue_scale_colors)
# Bar plot for the distribution of respondents across countries
ggplot(data = dat[!is.na(dat$Q66), ], aes(x = Q66, fill = Q66)) +
geom_bar() +
labs(title = "Distribution of Respondents by Country",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = c("Cuba" = blue_scale_colors[1],
"Mexico" = blue_scale_colors[2],
"United States" = blue_scale_colors[3],
na.value = "grey"), drop = FALSE)
# Bar plot for the distribution of respondents across countries
ggplot(data = dat[!is.na(dat$Q66), ], aes(x = Q66, fill = Q66)) +
geom_bar() +
labs(title = "Distribution of Respondents by Country",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = blue_scale_colors)
# Check levels
levels(dat$Q66)
# Check levels
levels(dat$Q66)
# Bar plot for the distribution of respondents across countries
ggplot(data = dat, aes(x = Q66, fill = Q66)) +
geom_bar() +
labs(title = "Distribution of Respondents by Country",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = c("Cuba" = blue_scale_colors[1],
"Mexico" = blue_scale_colors[2],
"United States" = blue_scale_colors[3],
na.value = "grey"), drop = FALSE)
# Bar plot for the distribution of respondents across countries
ggplot(data = dat, aes(x = Q66, fill = Q66)) +
geom_bar() +
labs(title = "Distribution of Respondents by Country",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = blue_scale_colors)
#Histogram for birth years
ggplot(data = dat, aes(x = Q32)) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
labs(title = "Distribution of Birth Years",
x = "Birth Year",
y = "Count") +
theme_minimal()
# Check levels
levels(dat$Q66)
# Bar plot for the distribution of respondents across countries
ggplot(data = dat, aes(x = Q66, fill = Q66)) +
geom_bar() +
labs(title = "Distribution of Respondents by Country",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = blue_scale_colors)
# Create a bar plot for Q66
ggplot(dat, aes(x = factor(Q66))) +
geom_bar(fill = blue_scale_colors, color = "black") +
labs(title = "Distribution of Responses by Country",
x = "Country",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
# Create a bar plot for Q66
ggplot(dat, aes(x = factor(Q66))) +
geom_bar(fill = blue_scale_colors, color = "black", na.rm = TRUE) +
labs(title = "Distribution of Responses by Country",
x = "Country",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
# Bar plot for the distribution of respondents across countries of residence
ggplot(data = dat[!is.na(dat$Q44), ], aes(x = Q44, fill = Q44)) +
geom_bar() +
labs(title = "Distribution of Respondents by Country of Residence",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = blue_scale_colors)
# Bar plot for Q66
ggplot(data = dat[!is.na(dat$Q66), ], aes(x = Q66, fill = Q66)) +
geom_bar() +
labs(title = "What country are you currently in, and/or where do you do most of your fishing?",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = blue_scale_colors)
# Bar plot for Q66
ggplot(data = dat[!is.na(dat$Q66), ], aes(x = Q66, fill = Q66)) +
geom_bar() +
labs(title = "What country are you currently in, and/or where do you do most of your fishing?",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = setNames(blue_scale_colors, unique(dat$Q66)))  # Match colors with unique values in Q66
# Bar plot for Q66
ggplot(data = dat[!is.na(dat$Q66), ], aes(x = Q66, fill = Q66)) +
geom_bar() +
labs(title = "What country are you currently in, and/or where do you do most of your fishing?",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = setNames(blue_scale_colors, unique(dat$Q66)),
na.value = "grey")  # Set NA color in the legend to grey
# Bar plot for Q66
ggplot(data = dat[!is.na(dat$Q66), ], aes(x = Q66, fill = Q66)) +
geom_bar() +
labs(title = "What country are you currently in, and/or where do you do most of your fishing?",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = blue_scale_colors),
# Bar plot for Q66
ggplot(data = dat[!is.na(dat$Q66), ], aes(x = Q66, fill = Q66)) +
geom_bar() +
labs(title = "What country are you currently in, and/or where do you do most of your fishing?",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = blue_scale_colors)
# Bar plot for Q66
ggplot(data = dat[!is.na(dat$Q66), ], aes(x = Q66, fill = Q66)) +
geom_bar() +
labs(title = "What country are you currently in, and/or where do you do most of your fishing?",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = blue_scale_colors)
# Bar plot for the distribution of respondents across countries of residence
ggplot(data = dat[!is.na(dat$Q44), ], aes(x = Q44, fill = Q44)) +
geom_bar() +
labs(title = "Distribution of Respondents by Country of Residence",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = blue_scale_colors)
#-------------------------------------------------------------------------------
#Q44 - What country do you currently reside in?
dat$Q44 = as.factor(dat$Q44)
# Check levels
levels(dat$Q44)
#Remove empty strings from all columns
dat <- lapply(dat, function(x) {
levels(x) <- levels(x)[levels(x) != ""]
x
})
## upload dataset
dat <- read.csv(file.choose())
#Add headers
names(dat) ### column headers of data file
head(dat) ### column headers of data file plus first 6 rows of data
summary(dat) ### summary statistics for datum
### Deleting unnecessary columns and rows
dat$StartDate <- NULL
dat$EndDate <- NULL
dat$Status <- NULL
dat$IPAddress <- NULL
dat$Duration..in.seconds. <- NULL
dat$Finished <- NULL
dat$RecordedDate <- NULL
dat$ResponseId <- NULL
dat$RecipientLastName <- NULL
dat$RecipientFirstName <- NULL
dat$RecipientEmail <- NULL
dat$ExternalReference <- NULL
dat$LocationLatitude <- NULL
dat$LocationLongitude <- NULL
dat$DistributionChannel <- NULL
dat$UserLanguage <- NULL
dat$Q_RecaptchaScore <- NULL
#Remove rows 1 and 2
dat <- dat[-c(1, 2), ]
#Remove empty strings from all columns
dat <- lapply(dat, function(x) {
levels(x) <- levels(x)[levels(x) != ""]
x
})
View(dat)
View(dat)
View(dat)
## upload dataset
dat <- read.csv(file.choose())
#-------------------------------------------------------------------------------
#Q66 - What country are you currently in, and/or where do you do most of your fishing?
dat$Q66 = as.factor(dat$Q66, exclude = NULL)
#Add headers
names(dat) ### column headers of data file
head(dat) ### column headers of data file plus first 6 rows of data
summary(dat) ### summary statistics for datum
### Deleting unnecessary columns and rows
dat$StartDate <- NULL
dat$EndDate <- NULL
dat$Status <- NULL
dat$IPAddress <- NULL
dat$Duration..in.seconds. <- NULL
dat$Finished <- NULL
dat$RecordedDate <- NULL
dat$ResponseId <- NULL
dat$RecipientLastName <- NULL
dat$RecipientFirstName <- NULL
dat$RecipientEmail <- NULL
dat$ExternalReference <- NULL
dat$LocationLatitude <- NULL
dat$LocationLongitude <- NULL
dat$DistributionChannel <- NULL
dat$UserLanguage <- NULL
dat$Q_RecaptchaScore <- NULL
#Remove rows 1 and 2
dat <- dat[-c(1, 2), ]
### delete surveys with progress = 0
zeroes <- dat[dat$Progress == 0,]
nrow(zeroes) # number of surveys with progress = 0
dat <- dat[dat$Progress > 0,]
nrow(dat) ## survey sample size after filtering for zeroes
## creating country-specific datasets for USA and MX based on Q44 asking where they reside
table(dat$Q44)
usa <- dat[dat$Q44 == "United States",]
nrow(usa) ## USA sample size
mex <- dat[dat$Q44 == "Mexico",]
nrow(mex) # MEX sample size
################################################################################
# Load necessary library for plotting
library(ggplot2)
# Generate a blue scale color palette
blue_scale_colors <- colorRampPalette(c("lightblue", "darkblue"))(5)
#-------------------------------------------------------------------------------
#Q32 - What year were you born?
dat$Q32 = as.numeric(dat$Q32)
summary(dat$Q32) #Some people entered years wrong, need to fix
# Filter data to include birth years within the range of 1900 and 2023
dat <- dat[dat$Q32 >= 1900 & dat$Q32 <= 2023, ] #Fixed
#Histogram for birth years
ggplot(data = dat, aes(x = Q32)) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
labs(title = "Distribution of Birth Years",
x = "Birth Year",
y = "Count") +
theme_minimal()
#-------------------------------------------------------------------------------
#Q66 - What country are you currently in, and/or where do you do most of your fishing?
dat$Q66 = as.factor(dat$Q66, exclude = NULL)
# Check levels
levels(dat$Q66)
#-------------------------------------------------------------------------------
#Q66 - What country are you currently in, and/or where do you do most of your fishing?
dat$Q66 = as.factor(dat$Q66)
dat$Q66 <- droplevels(dat$Q66)
# Check levels
levels(dat$Q66)
dat$Q66 <- factor(dat$Q66[dat$Q66 != ""])
# Check levels
levels(dat$Q66)
#Removing unecessary levels
dat$Q66 <- droplevels(dat$Q66, exclude = "")
# Check levels
levels(dat$Q66)
# Bar plot for Q66
ggplot(data = dat[!is.na(dat$Q66), ], aes(x = Q66, fill = Q66)) +
geom_bar() +
labs(title = "What country are you currently in, and/or where do you do most of your fishing?",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = blue_scale_colors)
#-------------------------------------------------------------------------------
#Q44 - What country do you currently reside in?
dat$Q44 = as.factor(dat$Q44)
# Check levels
levels(dat$Q44)
#Removing unecessary levels
dat$Q44 <- droplevels(dat$Q44, exclude = "")
# Bar plot for the distribution of respondents across countries of residence
ggplot(data = dat[!is.na(dat$Q44), ], aes(x = Q44, fill = Q44)) +
geom_bar() +
labs(title = "Distribution of Respondents by Country of Residence",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = blue_scale_colors)
# Bar plot for Q44
ggplot(data = dat[!is.na(dat$Q44), ], aes(x = Q44, fill = Q44)) +
geom_bar() +
labs(title = "What country do you currently reside in?",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = blue_scale_colors) #Need to fix color mismatch
#-------------------------------------------------------------------------------
#Q67 - Please indicate your race. - Selected Choice
dat$Q67 = as.factor(dat$Q67)
# Check levels
levels(dat$Q67)
#Removing unecessary levels
dat$Q67 <- droplevels(dat$Q67, exclude = "")
# Bar plot for Q67
ggplot(data = dat[!is.na(dat$Q67), ], aes(x = Q67, fill = Q67)) +
geom_bar() +
labs(title = "Please indicate your race.",
x = "Race",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = blue_scale_colors) #Need to fix color mismatch
View(dat)
#Q35 - Please indicate your gender.
dat$Q35 = as.factor(dat$Q35)
#-------------------------------------------------------------------------------
#Q35 - Please indicate your gender.
dat$Q35 = as.factor(dat$Q35)
# Check levels
levels(dat$Q35)
#Removing unecessary levels
dat$Q35 <- droplevels(dat$Q35, exclude = "")
# Bar plot for Q35
ggplot(data = dat[!is.na(dat$Q35), ], aes(x = Q35, fill = Q35)) +
geom_bar() +
labs(title = "Please indicate your gender.",
x = "Gender",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = blue_scale_colors) #Colors match on this one
# Count the number of respondents from each state
state_counts <- table(dat$state)
# Convert state counts to a data frame
state_counts_df <- as.data.frame(state_counts)
names(state_counts_df) <- c("State", "Respondent_Count")
# Create a bar plot of respondent counts by state
ggplot(state_counts_df, aes(x = State, y = Respondent_Count)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Distribution of Respondents by State",
x = "State",
y = "Number of Respondents")
#state - 50 States, D.C. and Puerto Rico
dat$state = as.factor(dat$state)
# Check levels
levels(dat$state)
#Removing unecessary levels
dat$state <- droplevels(dat$state, exclude = "")
dat$state <- droplevels(dat$state, exclude = "I do not reside in the United States")
# Check levels
levels(dat$state)
#Still figuring out how to best display...
#Pie chart for state
ggplot(dat, aes(x = "", fill = state)) +
geom_bar(width = 1) +
coord_polar(theta = "y") +
labs(title = "Distribution of Respondents by State") +
scale_fill_brewer(palette = "Set3") +
theme_void()
# Count the number of respondents from each state
state_counts <- table(dat$state)
# Create a data frame with state counts
state_counts_df <- data.frame(State = names(state_counts), Respondent_Count = as.numeric(state_counts))
# Reorder the levels of State to match the desired order
state_counts_df$State <- factor(state_counts_df$State, levels = c("Alabama", "California", "Florida", "Georgia", "Hawaii", "Illinois", "Kentucky", "Louisiana", "Mississippi", "New Hampshire", "North Carolina", "Ohio", "Oregon", "Tennessee", "Texas", NA))
c
c
# Reorder the levels of State to match the desired order
state_counts_df$State <- factor(state_counts_df$State, levels = c("Alabama", "California", "Florida", "Georgia", "Hawaii", "Illinois", "Kentucky", "Louisiana", "Mississippi", "New Hampshire", "North Carolina", "Ohio", "Oregon", "Tennessee", "Texas", NA))
# Create a pie chart
ggplot(state_counts_df, aes(x = "", y = Respondent_Count, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
labs(title = "Distribution of Respondents by State") +
scale_fill_brewer(palette = "Set3") +
theme_void() +
theme(legend.position = "bottom")  # Move legend to bottom
e
# Create a pie chart
ggplot(state_counts_df, aes(x = "", y = Respondent_Count, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
labs(title = "Distribution of Respondents by State") +
scale_fill_brewer(palette = blue_scale_colors) +
theme_void() +
theme(legend.position = "bottom")  # Move legend to bottom
# Create a pie chart
ggplot(state_counts_df, aes(x = "", y = Respondent_Count, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
labs(title = "Distribution of Respondents by State") +
scale_fill_manual(values = blue_scale_colors, na.value = "grey") +
theme_void() +
theme(legend.position = "bottom")  # Move legend to bottom
#Still figuring out how to best display...
# Create a palette from orange to blue
orange_blue_palette <- colorRampPalette(c("orange", "blue"))(length(state_counts_df$State))
# Create a pie chart
# Create a pie chart
ggplot(state_counts_df, aes(x = "", y = Respondent_Count, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
labs(title = "Distribution of Respondents by State") +
scale_fill_manual(values = setNames(orange_blue_palette, state_counts_df$State)) +
theme_void() +
theme(legend.position = "bottom")  # Move legend to bottom
#Still figuring out how to best display...
# Create a palette from orange to blue
orange_green_palette <- colorRampPalette(c("orange", "green"))(length(state_counts_df$State))
# Create a pie chart
# Create a pie chart
ggplot(state_counts_df, aes(x = "", y = Respondent_Count, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
labs(title = "Distribution of Respondents by State") +
scale_fill_manual(values = setNames(orange_green_palette, state_counts_df$State)) +
theme_void() +
theme(legend.position = "bottom")  # Move legend to bottom
#Still figuring out how to best display...
# Create a palette from orange to blue
green_blue_palette <- colorRampPalette(c("green", "blue"))(length(state_counts_df$State))
# Create a pie chart
# Create a pie chart
ggplot(state_counts_df, aes(x = "", y = Respondent_Count, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
labs(title = "Distribution of Respondents by State") +
scale_fill_manual(values = setNames(green_blue_palette, state_counts_df$State)) +
theme_void() +
theme(legend.position = "bottom")  # Move legend to bottom
# Bar plot for Q44
ggplot(data = dat[!is.na(dat$Q44), ], aes(x = Q44, fill = Q44)) +
geom_bar() +
labs(title = "What country do you currently reside in?",
x = "Country",
y = "Count") +
theme_minimal() +
scale_fill_manual(values = blue_scale_colors) #Need to fix color mismatch
summary(dat$Progress)
summary(dat$Progress)
summary(dat$Progress)
dat$summary = as.numeric(dat$summary)
summary(dat$Progress)
dat$summary = as.numeric(dat$summary)
